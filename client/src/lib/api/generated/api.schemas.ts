/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * online
 * OpenAPI spec version: v1
 */
/**
 * the dto used to send an error response to the client when an unhandled exception occurs on the server
 */
export interface InternalErrorResponse {
	/** error status */
	status: string;
	/** http status code of the error response */
	code: number;
	/** the reason for the error */
	reason: string;
	/** additional information or instructions */
	note: string;
}

export interface User {
	/** Gets or sets the primary key for this user. */
	id: number;
	/**
	 * Gets or sets the user name for this user.
	 * @nullable
	 */
	userName?: string | null;
	/**
	 * Gets or sets the normalized user name for this user.
	 * @nullable
	 */
	normalizedUserName?: string | null;
	/**
	 * Gets or sets the email address for this user.
	 * @nullable
	 */
	email?: string | null;
	/**
	 * Gets or sets the normalized email address for this user.
	 * @nullable
	 */
	normalizedEmail?: string | null;
	/** Gets or sets a flag indicating if a user has confirmed their email address. */
	emailConfirmed: boolean;
	/**
	 * Gets or sets a salted and hashed representation of the password for this user.
	 * @nullable
	 */
	passwordHash?: string | null;
	/**
	 * A random value that must change whenever a users credentials change (password changed, login removed)
	 * @nullable
	 */
	securityStamp?: string | null;
	/**
	 * A random value that must change whenever a user is persisted to the store
	 * @nullable
	 */
	concurrencyStamp?: string | null;
	/**
	 * Gets or sets a telephone number for the user.
	 * @nullable
	 */
	phoneNumber?: string | null;
	/** Gets or sets a flag indicating if a user has confirmed their telephone address. */
	phoneNumberConfirmed: boolean;
	/** Gets or sets a flag indicating if two factor authentication is enabled for this user. */
	twoFactorEnabled: boolean;
	/**
	 * Gets or sets the date and time, in UTC, when any user lockout ends.
	 * @nullable
	 */
	lockoutEnd?: string | null;
	/** Gets or sets a flag indicating if the user could be locked out. */
	lockoutEnabled: boolean;
	/** Gets or sets the number of failed login attempts for the current user. */
	accessFailedCount: number;
	firstName: string;
	lastName: string;
	/** @nullable */
	refreshToken?: string | null;
	/** @nullable */
	refreshTokenExpiresAtUtc?: string | null;
}

export interface UserRegisterRequest {
	firstName: string;
	lastName: string;
	email: string;
	password: string;
}

export interface LoginRequest {
	email: string;
	password: string;
	/** @nullable */
	twoFactorCode?: string | null;
	/** @nullable */
	twoFactorRecoveryCode?: string | null;
}

export type UsersListParams = {
	/**
	 * @nullable
	 */
	sorts?: string | null;
	/**
	 * @nullable
	 */
	filters?: string | null;
	/**
	 * @nullable
	 */
	page?: number | null;
	/**
	 * @nullable
	 */
	pageSize?: number | null;
};

export type UserListParams = {
	/**
	 * @nullable
	 */
	sorts?: string | null;
	/**
	 * @nullable
	 */
	filters?: string | null;
	/**
	 * @nullable
	 */
	page?: number | null;
	/**
	 * @nullable
	 */
	pageSize?: number | null;
};

export type OnlineFeaturesAccountLoginGoogleEndpointParams = {
	returnUrl: string;
};
